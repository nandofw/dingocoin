name: Continuous Integration on develop branch
on:
  push:
    branches:
    - dev
  pull_request:
    branches:
    - dev
env:
  SOURCE_ARTIFACT: source
jobs:
  create-source-distribution:
    name: Create Source Distribution
    runs-on: ubuntu-20.04
    env:
      ARTIFACT_DIR: source
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install Required Packages
      run: |
        sudo apt-get install build-essential libtool autotools-dev automake pkg-config libssl-dev libevent-dev bsdmainutils python3
        sudo apt-get install libboost-system-dev libboost-filesystem-dev libboost-chrono-dev libboost-program-options-dev libboost-test-dev libboost-thread-dev
        sudo apt-get install libboost-all-dev
        sudo apt-get install libdb5.3-dev libdb5.3++-dev
        sudo apt-get update
        sudo apt-get install libminiupnpc-dev
        sudo apt-get install libzmq3-dev
        sudo apt-get install libqt5gui5 libqt5core5a libqt5dbus5 qttools5-dev qttools5-dev-tools libprotobuf-dev protobuf-compiler
        sudo apt-get install libqrencode-dev
    - name: Create Distribution Tarball
      run: |
        ./autogen.sh
        ./configure --with-incompatible-bdb --with-miniupnpc
        make dist
    - name: Download Dependencies
      run: make -C depends download
    - name: Create Dependencies Tarball
      run: tar -czf depends.tar.gz depends
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv depends.tar.gz dingocoin-*.tar.gz $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
        path: ${{ env.ARTIFACT_DIR }}
  build-linux:
    name: Build for Linux
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      SOURCE_ARTIFACT: source
      ARTIFACT_DIR: linux-binaries
      TEST_LOG_ARTIFACT_DIR: test-logs
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf dingocoin-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-zmq
    - name: Build Dependencies
      run: make -C depends -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build Dingocoin
      run: |
        ./configure --prefix=$(realpath depends/x86_64-pc-linux-gnu)
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{dingocoin-cli,dingocoin-tx,dingocoind,qt/dingocoin-qt} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-binaries
        path: ${{ env.ARTIFACT_DIR }}
  build-windows:
    name: Build for Windows
    needs: create-source-distribution
    runs-on: ubuntu-20.04
    env:
      SOURCE_ARTIFACT: source
      ARTIFACT_DIR: windows-binaries
    steps:
    - name: Getting Source
      uses: actions/download-artifact@v3
      with:
        name: ${{ env.SOURCE_ARTIFACT }}
    - name: Extract Archives
      run: |
        tar -xzf depends.tar.gz
        tar -xzf dingocoin-*.tar.gz --strip-components=1
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Install Required Packages
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
    - name: Switch MinGW GCC and G++ to POSIX Threading
      run: |
        sudo update-alternatives --set x86_64-w64-mingw32-gcc /usr/bin/x86_64-w64-mingw32-gcc-posix
        sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
    - name: Build Dependencies
      run: make -C depends -j$(nproc) HOST=x86_64-w64-mingw32
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Build Dingocoin
      run: |
        ./configure --prefix=$(realpath depends/x86_64-w64-mingw32)
        make -j$(nproc)
      working-directory: ${{ env.SOURCE_ARTIFACT }}
    - name: Prepare Files for Artifact
      run: |
        mkdir -p $ARTIFACT_DIR
        mv $SOURCE_ARTIFACT/src/{dingocoin-cli.exe,dingocoin-tx.exe,dingocoind.exe,qt/dingocoin-qt.exe} $ARTIFACT_DIR
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-binaries
        path: ${{ env.ARTIFACT_DIR }}

  # MacOS build script adapted from https://github.com/dogecoin/dogecoin/blob/master/.github/workflows/ci.yml
  build-macos:
    name: Build for MacOS
    needs: create-source-distribution
    runs-on: macos-11
    env:
      name: x86_64-macos
      host: x86_64-apple-darwin20.6.0
      config-opts: "--enable-gui=qt5 --enable-reduce-exports"
      goal: deploy
    steps:
      - name: Install packages
        run: |
          brew install automake libtool pkg-config miniupnpc librsvg libnatpmp zeromq python
          pip3 install ds_store mac_alias
      - name: Checkout
        uses: actions/checkout@v3
      - name: Dependency cache
        uses: actions/cache@v3
        env:
          cache-name: depends
        with:
          path: ./depends/built
          key: ${{ env.name }}-${{ env.cache-name }}-${{ hashFiles('depends/packages/*') }}
      - name: Build depends
        run: |
          make -C depends HOST=${{ env.host }}
      - name: CCache
        uses: actions/cache@v3
        env:
          cache-name: ccache
        with:
          path: ~/.ccache
          key: ${{ env.name }}-${{ env.cache-name }}-${{ hashFiles('**/configure.ac') }}
      - name: Build Dingocoin
        run: |
          depends/${{ env.host }}/native/bin/ccache --max-size=100M
          ./autogen.sh
          ./configure --prefix=`pwd`/depends/${{ env.host }} ${{ env.config-opts }} || ( cat config.log && false)
          make ${{ env.goal }} || ( echo "Build failure. Verbose build follows." && make ${{ env.goal }} V=1 ; false )
          mv Dingocoin-Core.dmg Dingocoin.dmg
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-binaries
          path: |
            Dingocoin.dmg
